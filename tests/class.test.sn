
class TestCase {
    pub var num: Int = 2
    pub fn __init() {
        var d = 5
    }

    pub fn hello() Int {
        return 2
    }

    pub static fn static_fn() Int {
        return 3
    }

    pub static fn hello() Int {
        return TestCase::static_fn()
    }

    pub fn __bool() Bool {
        return true
    }
}

test "create a new instance of a class" {
    assert new TestCase()
}

test "call class function" {
    var t = new TestCase()
    assert t.hello() == 2
}

test "call class static function" {
    assert TestCase::static_fn() == 3
}

test "get class attributes" {
    var t = new TestCase()
    assert t.num == 2
}

test "call static function from static method (with static override)" {
    assert TestCase::hello() == 3
}

test "Class method call with generics" skip {
    var t = new TestCase()
    assert t.tmp<Int>(3) == 3
    assert t.tmp<String>("3") == "3"
}
