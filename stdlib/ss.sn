import std::stream;

/**
 * @brief A class implementing the `Stream<String>` interface, representing a stream of strings.
 *        Additionally, it implements the `ToString` trait for convenient string representation.
 */
public class StringStream implements stream::Stream<String>, ToString {
  /**
   * @brief The internal string storage for the stream.
   */
  let mut string: String;
  /**
   * @brief Constructs a `StringStream` object with an optional initial string.
   * @param[in] string The initial string content for the stream.
   * @remark If no initial string is provided, the stream starts with an empty string.
   */
  public: StringStream(string: String = "") : string(string.clone()) {}
  /**
   * @brief Reads the entire content of the string stream.
   * @return The string content of the stream.
   * @remark The entire string is returned as a single read operation, making it suitable for scenarios
   *         where the entire content of the stream needs to be retrieved at once.
   */
  func read() String { return self.string; }
  /**
   * @brief Appends the given string value to the string stream.
   * @param[in] value The string to be appended to the stream.
   * @remark The `write` operation appends the provided string to the existing content of the stream.
   */
  @inline
  mut func write(value: String) { self.string += value; }
  /**
   * @brief Checks if the string stream is empty.
   * @return `true` if the string stream is empty, `false` otherwise.
   * @remark The `empty` method provides a quick check for determining whether the stream has any content.
   */
  @inline
  func empty() bool { return self.string.is_empty(); }
  /**
   * @brief Converts the string stream to its string representation.
   * @return The string representation of the string stream.
   * @remark The `to_string` method is part of the `ToString` trait implementation, enabling
   *         seamless conversion of the string stream to a string representation.
   */
  @inline
  func to_string() String { return self.string; }
  /**
   * @brief Alias for the `to_string` method.
   * @return The string representation of the string stream.
   * @remark The `str` method provides an alternative name for the `to_string` method, offering
   *         a convenient and familiar alias for obtaining the string representation.
   */
  @inline
  func str() String { return self.to_string(); }
  /**
   * @brief Gets the size of the string stream.
   * @return The size of the string stream, indicating the number of characters in the stream.
   * @remark The `size` method returns the size of the internal string storage, providing
   *         information about the length of the content in the string stream.
   */
  @inline
  func size() i32 { return self.string.size(); }
};
